"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞

–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ vision.md
"""

from aiogram.types import Message
from aiogram.filters import Command
from src.llm_client import send_to_llm, build_prompt
from src.config import get_public_config
from src.logging_config import log_command

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –ø–∞–º—è—Ç–∏
chat_conversations = {}


def save_to_history(chat_id, user_message, bot_response):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"""
    if chat_id not in chat_conversations:
        chat_conversations[chat_id] = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–æ—Ç–∞
    chat_conversations[chat_id].extend([
        {"role": "user", "content": user_message},
        {"role": "assistant", "content": bot_response}
    ])
    
    # –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ –ª–∏–º–∏—Ç–∞
    config = get_public_config()
    max_history = config["max_history_length"]
    if len(chat_conversations[chat_id]) > max_history:
        chat_conversations[chat_id] = chat_conversations[chat_id][-max_history:]


def get_conversation_history(chat_id):
    """–ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è —á–∞—Ç–∞"""
    return chat_conversations.get(chat_id, [])


async def handle_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    chat_id = str(message.chat.id)
    username = message.from_user.username if message.from_user else None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    log_command(chat_id, "/start", username)
    
    welcome = """üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.

üîß –ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞:
‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ —á–∞—Ç-–±–æ—Ç–æ–≤ –∏ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LLM –≤ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã  
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á —Å –ø–æ–º–æ—â—å—é –ò–ò
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞

‚ùì –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö!

üìã –ö–æ–º–∞–Ω–¥—ã: /help - —Å–ø—Ä–∞–≤–∫–∞, /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é, /stop - –∑–∞–≤–µ—Ä—à–∏—Ç—å"""
    
    await message.answer(welcome)


async def handle_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    chat_id = str(message.chat.id)
    username = message.from_user.username if message.from_user else None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    log_command(chat_id, "/help", username)
    
    help_text = """üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É  
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
/stop - –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥

üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö, –∏ —è –æ—Ç–≤–µ—á—É!

üîß –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞ –¥–ª—è –º–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞?"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ò–ò –≤ CRM?"
‚Ä¢ "–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ò–ò?"
‚Ä¢ "–û–±—É—á–∞–µ—Ç–µ –ª–∏ –≤—ã –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–µ —Å –ò–ò?"
"""
    await message.answer(help_text)


async def handle_clear(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /clear"""
    chat_id = str(message.chat.id)
    username = message.from_user.username if message.from_user else None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    log_command(chat_id, "/clear", username)
    
    if chat_id in chat_conversations:
        del chat_conversations[chat_id]
        await message.answer("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.")
    else:
        await message.answer("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É–∂–µ –ø—É—Å—Ç–∞.")


async def handle_stop(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stop"""
    chat_id = str(message.chat.id)
    username = message.from_user.username if message.from_user else None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    log_command(chat_id, "/stop", username)
    
    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    if chat_id in chat_conversations:
        del chat_conversations[chat_id]
    
    goodbye = """üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!

–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –ò–ò-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start

–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! ü§ñ"""
    
    await message.answer(goodbye)


async def handle_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏—Å—Ç–æ—Ä–∏–µ–π"""
    user_text = message.text
    chat_id = str(message.chat.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not user_text:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ LLM —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        history = get_conversation_history(chat_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ LLM —Å –∏—Å—Ç–æ—Ä–∏–µ–π
        response = await send_to_llm(user_text, chat_id, history)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        save_to_history(chat_id, user_text, response)
        
        await message.answer(response)
        
    except Exception as e:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")


# –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
async def simple_handler(message: Message):
    """–ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ handle_message"""
    await handle_message(message)